name: Pipeline with Smart Troubleshooting

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  # Job 1: Setup and Dependencies
  setup:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests
        
    - name: Simulate Setup Failure (Demo)
      run: |
        FAILURE_CHANCE=$((RANDOM % 4))
        if [ $FAILURE_CHANCE -eq 0 ]; then
          echo "❌ ERROR: Failed to install dependencies"
          echo "Package 'unknown-package' not found"
          exit 1
        fi
        echo "✅ Setup completed successfully"

  # Job 2: Tests
  tests:
    runs-on: ubuntu-latest
    needs: setup
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Run tests
      run: |
        echo "Running unit tests..."
        FAILURE_CHANCE=$((RANDOM % 4))
        if [ $FAILURE_CHANCE -eq 0 ]; then
          echo "❌ ERROR: Test failed"
          echo "TestUserAuth.test_login: AssertionError"
          exit 1
        fi
        echo "✅ All tests passed"

  # Job 3: Build
  build:
    runs-on: ubuntu-latest
    needs: tests
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Build application
      run: |
        echo "Building application..."
        FAILURE_CHANCE=$((RANDOM % 4))
        if [ $FAILURE_CHANCE -eq 0 ]; then
          echo "❌ ERROR: Build failed"
          echo "Docker build failed: COPY instruction failed"
          exit 1
        fi
        echo "✅ Build completed successfully"

  # Job 4: Deploy
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Deploy to staging
      run: |
        echo "Deploying to staging..."
        FAILURE_CHANCE=$((RANDOM % 4))
        if [ $FAILURE_CHANCE -eq 0 ]; then
          echo "❌ ERROR: Deploy failed"
          echo "SSH connection timeout to staging server"
          exit 1
        fi
        echo "✅ Deploy completed successfully"


  troubleshooting:
    runs-on: ubuntu-latest
    needs: [setup, tests, build, deploy]
    if: always() && (needs.setup.result == 'failure' || needs.tests.result == 'failure' || needs.build.result == 'failure' || needs.deploy.result == 'failure')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install openai requests
        
    - name: ChatGPT Troubleshooting
      id: troubleshoot
      timeout-minutes: 5
      env:
        SETUP_STATUS: ${{ needs.setup.result }}
        TESTS_STATUS: ${{ needs.tests.result }}
        BUILD_STATUS: ${{ needs.build.result }}
        DEPLOY_STATUS: ${{ needs.deploy.result }}
        ERROR_TYPE: 'multi_job_pipeline_failure'
        WORKFLOW_NAME: ${{ github.workflow }}
        REPOSITORY: ${{ github.repository }}
        BRANCH: ${{ github.ref_name }}
        COMMIT: ${{ github.sha }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: |
        python3 scripts/chatgpt_troubleshoot.py
        
    - name: Upload Troubleshooting Report
      if: always() && hashFiles('troubleshooting_report.md') != ''
      uses: actions/upload-artifact@v4
      with:
        name: troubleshooting-report-${{ github.run_number }}
        path: troubleshooting_report.md
        retention-days: 30
        
